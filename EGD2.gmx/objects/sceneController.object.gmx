<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

blackoutAlpha = 1;
targetBlackoutAlpha = 0;
blackoutAlphaRate = 0.06;
alphaTolerance = 0.05;

targetRoom = noone;
transitionX = room_width/2;
transitionY = room_height/2;
zoom = 0.25; //relative amount for transition, less than one for zoom back
transitionProgress = 0;
transitionTween = 0.03;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tween blackout

if ( blackoutAlpha &lt; targetBlackoutAlpha ) {
    blackoutAlpha += blackoutAlphaRate;
    if ( blackoutAlpha &gt; targetBlackoutAlpha - alphaTolerance ) {
        blackoutAlpha = targetBlackoutAlpha;
    }
}
else if ( blackoutAlpha &gt; targetBlackoutAlpha ) {
    blackoutAlpha -= blackoutAlphaRate;
    if ( blackoutAlpha &lt; targetBlackoutAlpha + alphaTolerance ) {
        blackoutAlpha = targetBlackoutAlpha;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Transition

if ( targetRoom != noone &amp;&amp; room_exists( targetRoom ) ) {
    targetBlackoutAlpha = 1;
    transitionProgress = lerp( transitionProgress, 1, transitionTween );
    
    var tCurrentZoom = 1 + abs((1 - zoom) * transitionProgress);
    if ( zoom &lt; 1 ) {
        tCurrentZoom = 1 - abs(zoom * transitionProgress);
    }
    
    with ( sceneObject ) {
        var tZoomDir = point_direction( other.transitionX, other.transitionY,
                                            originX, originY );
        var tZoomDist = point_distance( other.transitionX, other.transitionY,
                                            originX, originY );
        
        // Set position
        tZoomDist = (tZoomDist * other.zoom * relDepth - tZoomDist) * other.transitionProgress;
        x = originX + lengthdir_x( tZoomDist, tZoomDir );
        y = originY + lengthdir_y( tZoomDist, tZoomDir );
        
        // Adjust image scale
        image_xscale = tCurrentZoom;
        image_yscale = tCurrentZoom;
        
        //x -= sprite_get_width( sprite_index ) * tCurrentZoom / 2 * sign( other.zoom );
        //y -= sprite_get_height( sprite_index ) * tCurrentZoom / 2 * sign( other.zoom );
    }
    
    //Scale background
    background_xscale = tCurrentZoom;
    background_yscale = tCurrentZoom;
    
    //Check for when close enough to transition
    if ( blackoutAlpha &gt; 1 - alphaTolerance ) {
        room_goto( targetRoom );
    }
}

background_x = - (background_width * background_xscale - room_width) / 2;
background_y = - (background_height * background_yscale - room_height) / 2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_set_color( c_black );
draw_set_alpha( blackoutAlpha );

draw_rectangle( 0, 0, window_get_width(), window_get_height(), false );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Test

transitionGotoRoom( Space_rm );

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
